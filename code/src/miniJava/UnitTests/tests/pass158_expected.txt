================ Tokens ================
1:0 Class{class}
1:6 Identifier{Test}
1:11 LCurly{{}
3:4 VoidType{void}
3:9 Identifier{p}
3:10 LParen{(}
3:11 RParen{)}
3:13 LCurly{{}
4:8 Identifier{a}
4:10 AssignmentOp{=}
4:12 BooleanLiteral{true}
4:16 Semicolon{;}
5:8 Identifier{a}
5:10 LBracket{[}
5:11 Identifier{b}
5:12 RBracket{]}
5:14 AssignmentOp{=}
5:16 Identifier{c}
5:17 Semicolon{;}
6:8 Identifier{p}
6:10 LParen{(}
6:11 RParen{)}
6:12 Semicolon{;}
7:8 Identifier{a}
7:9 Dot{.}
7:10 Identifier{b}
7:12 AssignmentOp{=}
7:14 Identifier{d}
7:15 Semicolon{;}
8:8 Identifier{c}
8:9 Dot{.}
8:10 Identifier{p}
8:11 LParen{(}
8:12 Identifier{e}
8:13 RParen{)}
8:14 Semicolon{;}
9:4 RCurly{}}
10:0 RCurly{}}
12:0 End{EOF}
================ Debug ================
================ Errors ================
======= AST Display =========================
Package
  ClassDeclList [1]
  . ClassDecl
  .   "Test" classname
  .   FieldDeclList [0]
  .   MethodDeclList [1]
  .   . (public) MethodDecl
  .   .   VOID BaseType
  .   .   "p" methodname
  .   .   ParameterDeclList [0]
  .   .   StmtList [5]
  .   .   . AssignStmt
  .   .   .   IdRef
  .   .   .     "a" Identifier
  .   .   .   LiteralExpr
  .   .   .     "true" BooleanLiteral
  .   .   . IxAssignStmt
  .   .   .   IdRef
  .   .   .     "a" Identifier
  .   .   .   RefExpr
  .   .   .     IdRef
  .   .   .       "b" Identifier
  .   .   .   RefExpr
  .   .   .     IdRef
  .   .   .       "c" Identifier
  .   .   . CallStmt
  .   .   .   IdRef
  .   .   .     "p" Identifier
  .   .   .   ExprList [0]
  .   .   . AssignStmt
  .   .   .   QualRef
  .   .   .     "b" Identifier
  .   .   .     IdRef
  .   .   .       "a" Identifier
  .   .   .   RefExpr
  .   .   .     IdRef
  .   .   .       "d" Identifier
  .   .   . CallStmt
  .   .   .   QualRef
  .   .   .     "p" Identifier
  .   .   .     IdRef
  .   .   .       "c" Identifier
  .   .   .   ExprList [1]
  .   .   .   . RefExpr
  .   .   .   .   IdRef
  .   .   .   .     "e" Identifier
=============================================
